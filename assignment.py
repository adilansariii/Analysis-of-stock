# -*- coding: utf-8 -*-
"""assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DfIuSaaaO3Du5Y4IJXPnMyrtU3Hgrb3e

To start of with the given assignment we will be analysing the Reliance Stock for the past one year dated  1May 2022 to 1 May 2023.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
pd.options.display.float_format = '{:.5f}'.format # Used to convert scientific notation of numbers into usual notations
import plotly.graph_objects as go # Used to plot CandlePlots

"""Link to the data set is : https://query1.finance.yahoo.com/v7/finance/download/RELIANCE.NS?period1=1651363200&period2=1688169600&interval=1d&events=history&includeAdjustedClose=true

"""

data = pd.read_csv("RELIANCE.NS.csv" , parse_dates=["Date"] , index_col=["Date"])
# We have set the columns of the dataframe as the dates for easy indexing
# We have used parse_dates to make dates into python's date time format

"""## Step 1 : ##

We have used data that was publically available on finance.yahoo.com. The stock that we will be analysing further is "Reliance Industries Limited"
"""

data.head()

def average(list):
  avg = sum(list) / len(list)
  return avg
# A function that we can use again and again according to our convenience

"""After defining a custom function for calculating the average, we can now use it to calculate the average trading volume over any particular interval of time as per our need"""

total_average = average(data["Volume"])
total_average
# This is the total average value of trading volume over the selected period of time.

"""We will now find the average for each month in the data for the entire year

Starting from May 2022 we have calculated the average trading volume and then visualized it in order to draw inferences from it.
"""

may_2022_volume = data.loc['2022-05-02':'2022-05-31']["Volume"]
may_2022_avg = average(may_2022_volume)
may_2022_avg

june_2022_volume = data.loc['2022-6-01':'2022-6-30']["Volume"]
june_2022_avg = average(june_2022_volume)
june_2022_avg

july_2022_volume = data.loc['2022-7-01':'2022-7-31']["Volume"]
july_2022_avg = average(july_2022_volume)
july_2022_avg

august_2022_volume = data.loc['2022-8-01':'2022-8-31']["Volume"]
august_2022_avg = average(august_2022_volume)
august_2022_avg

sept_2022_volume = data.loc['2022-9-01':'2022-9-30']["Volume"]

sept_2022_avg = average(sept_2022_volume)
sept_2022_avg

oct_2022_volume = data.loc['2022-10-01':'2022-10-31']["Volume"]
oct_2022_avg = average(oct_2022_volume)
oct_2022_avg

november_2022_volume = data.loc['2022-11-01':'2022-11-30']["Volume"]
november_2022_avg = average(november_2022_volume)
november_2022_avg

december_2022_volume = data.loc['2022-12-01':'2022-12-31']["Volume"]
december_2022_avg = average(december_2022_volume)
december_2022_avg

january_2023_volume = data.loc['2023-1-01':'2023-1-31']["Volume"]
january_2023_avg = average(january_2023_volume)
january_2023_avg

february_2023_volume = data.loc['2023-2-01':'2023-2-28']["Volume"]
february_2023_avg = average(february_2023_volume)
february_2023_avg

march_2023_volume = data.loc['2023-3-01':'2023-3-31']["Volume"]
march_2023_avg = average(march_2023_volume)
march_2023_avg

april_2023_volume = data.loc['2023-4-01':'2023-4-30']["Volume"]
april_2023_avg = average(april_2023_volume)
april_2023_avg

may_2023_volume = data.loc['2023-5-01':'2023-5-31']["Volume"]
may_2023_avg = average(may_2023_volume)
may_2023_avg

monthly_volume_avg = pd.DataFrame()
monthly_volume_avg["Months"] = ["May 2022" , 'June 2022' , "July 2022" , "August 2022" , "September 2022" , "October 2022" , "November 2022" , "December 2022" , "January 2023" , "February 2023" , "March 2023" , "April 2023" , "May 2023"]
monthly_volume_avg["Values"] = [may_2022_avg , june_2022_avg , july_2022_avg ,august_2022_avg, sept_2022_avg , oct_2022_avg , november_2022_avg,december_2022_avg, january_2023_avg , february_2023_avg ,march_2023_avg, april_2023_avg,may_2023_avg]

monthly_volume_avg["Values"] = monthly_volume_avg["Values"].round(0)
monthly_volume_avg["Values"]

monthly_volume_avg.plot(kind='line' , x="Months"  , y="Values")
plt.xticks(rotation=90)
plt.show()

"""According the lineplot above.
We can infer the following observations :
Observation Number 1 :  
The average volume of trading is highest in July 2022

Observation Number 2 :
The average volume of trading is lowest in December 2022

Observation Number 3 :
The average trading volume is very less over the period of august 2022 to December 2022 where it hits the lowest.
Furthermore we can also plot price for these values and infer more useful inferences
"""

monthly_volume_avg.plot(kind='bar' , x="Months"  , y="Values")
plt.xticks(rotation=90)
plt.show()

fig = go.Figure(data=[go.Candlestick(x=data.index,
                open=data['Open'],
                high=data['High'],
                low=data['Low'],
                close=data['Close'])])
fig.show()

# we can also use CandlePLot for a specific month in our data.
june_data = data.loc['2022-6-01':'2022-6-30']

fig = go.Figure(data=[go.Candlestick(x=june_data.index,
                open=june_data['Open'],
                high=june_data['High'],
                low=june_data['Low'],
                close=june_data['Close'])])
fig.show()

"""In order to analyse the strength of moves over the market we can plot the average trading volume with the price

"""

june_data = june_data.drop(["Open" , "High" , "Low" , "Adj Close"] , axis=1)

june_data.head()

june_data.plot(kind='line' ,y='Close')
june_data.plot(kind='line' ,y='Volume')